// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Resources renders correctly 1`] = `
<View
  style={
    [
      {
        "backgroundColor": "#f5faff",
        "flex": 1,
      },
      {
        "backgroundColor": "#ffffff",
      },
    ]
  }
>
  <View
    style={
      [
        {
          "backgroundColor": "#f5faff",
          "elevation": 5,
          "height": "12%",
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 2,
            "width": -2,
          },
          "shadowOpacity": 0.25,
          "shadowRadius": 4,
          "width": "100%",
        },
        {
          "backgroundColor": "#ffffff",
        },
      ]
    }
  >
    <View
      style={
        {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "marginTop": "15%",
          "paddingHorizontal": 15,
        }
      }
    >
      <View
        style={
          [
            {
              "backgroundColor": "rgba(253, 170, 31, 0.33)",
              "borderRadius": 15,
              "paddingHorizontal": 10,
              "width": "auto",
            },
            {
              "backgroundColor": "#203d61",
            },
          ]
        }
      >
        <Text
          style={
            [
              {
                "color": "#203d61",
                "fontFamily": "jbm",
                "fontSize": 17,
                "padding": 2,
              },
              {
                "color": "#E7EAED",
              },
            ]
          }
        >
          Services
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "#ffffff",
            "borderRadius": 15,
            "opacity": 1,
            "paddingHorizontal": 10,
            "width": "auto",
          }
        }
      >
        <Text
          style={
            [
              {
                "color": "#203d61",
                "fontFamily": "jbm",
                "fontSize": 17,
                "padding": 2,
              },
              {
                "color": "#000000",
              },
            ]
          }
        >
          Answers
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "#ffffff",
            "borderRadius": 15,
            "opacity": 1,
            "paddingHorizontal": 10,
            "width": "auto",
          }
        }
      >
        <Text
          style={
            [
              {
                "color": "#203d61",
                "fontFamily": "jbm",
                "fontSize": 17,
                "padding": 2,
              },
              {
                "color": "#000000",
              },
            ]
          }
        >
          About
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      [
        {
          "alignItems": "center",
          "backgroundColor": "white",
          "borderColor": "#203d61",
          "borderRadius": 25,
          "borderWidth": 1,
          "elevation": 5,
          "flexDirection": "row",
          "marginHorizontal": 10,
          "marginTop": 10,
          "overflow": "hidden",
          "paddingHorizontal": 15,
          "paddingVertical": 8,
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 2,
            "width": 0,
          },
          "shadowOpacity": 0.25,
          "shadowRadius": 3.84,
          "width": "96%",
        },
        {
          "backgroundColor": "#ffffff",
        },
      ]
    }
  >
    <Image
      source={1}
      style={
        {
          "height": 20,
          "marginRight": 5,
          "width": 20,
        }
      }
    />
    <TextInput
      onChangeText={[Function]}
      placeholder="Search for Services"
      placeholderTextColor="#D3D3D3"
      style={
        {
          "flex": 1,
          "fontFamily": "jbm",
          "marginLeft": 10,
        }
      }
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#ffffff",
          "marginLeft": 5,
          "opacity": 1,
        }
      }
    >
      <Text />
    </View>
  </View>
  <View
    style={
      {
        "backgroundColor": "rgba(0, 0, 0, 0)",
        "flexDirection": "row",
        "height": "7%",
        "marginTop": "3%",
      }
    }
  >
    <RCTScrollView
      data={
        [
          {
            "id": "a0Om0000003dz9rEAA",
            "subTypes": [
              {
                "desc2": "Front Street staff are available to help answer questions about adoptions, spay and neuter resources, lost and found pets, licensing, and nuisance barking. As barking complaints may not be made anonymously, please provide us with your name and address.",
                "description": "Questions about adoptions, spay/neuter resources, found animals, licensing and barking.",
                "id": "a0Om0000003dz9wEAA",
                "subType": "Contact Front Street Shelter",
              },
              {
                "desc2": "An Animal Control Officer will respond to requests to remove a dead animal from the public right-of-way, like a sidewalk or street. Deceased animals weighing 10 pounds or less may be placed in a plastic bag and disposed of in a trash receptacle.",
                "description": "Report a dead animal in the public right of way.",
                "id": "a0Om0000003dzA0EAI",
                "subType": "Dead Animal",
              },
              {
                "desc2": "If you’re inquiring about the status or identification of an animal, please visit us in person. For all other questions, please describe your concern in detail and provide your contact information so that we may assist you.",
                "description": "General Animal Control Questions",
                "id": "a0Om0000003dzA5EAI",
                "subType": "General: Animal Control",
              },
              {
                "desc2": "Suspected animal neglect should be reported to Animal Control so that an Officer can check on the animal's condition. When submitting this request, please provide the address where the animal lives and a detailed description of the animal and concern.",
                "description": "Report concerns with an owned animal.",
                "id": "a0Om0000003dzA1EAI",
                "subType": "Pet Complaint or Concerns",
              },
              {
                "desc2": "If you see a loose dog in a busy area, it’s best not to try to catch them, as they may run into traffic. If you’ve already captured the dog, you can bring the dog to the shelter between 12pm-5pm 7 days a week. Appointments are highly encouraged.",
                "description": "Report an injured, sick, or aggressive stray animal.",
                "id": "a0Om0000003dzA3EAI",
                "subType": "Stray or Loose Animal",
              },
            ],
            "type": "Animal Care",
          },
          {
            "id": "a0Om0000003eSnjEAE",
            "subTypes": [
              {
                "desc2": "Limited in-person appointments for building and planning are available Tuesdays and Wednesdays from 9:00 a.m. to 3:30 p.m. Assistance is also available by email. Please include the address and a detailed summary so that we can better assist you.",
                "description": "Questions or concerns regarding building, planning, or zoning.",
                "id": "a0Om0000003eSnlEAE",
                "subType": "General: Building and Planning",
              },
            ],
            "type": "Building and Planning",
          },
          {
            "id": "a0Om0000005austEAA",
            "subTypes": [
              {
                "desc2": "",
                "description": "Connecting businesses to lending partners and grant opportunities.",
                "id": "a0Om0000005eha5EAA",
                "subType": "Access to Capital",
              },
              {
                "desc2": "",
                "description": "Business technical assistance including, but not limited to: accounting, human resources, marketing, operations, site selection, strategic planning, succession planning, e-commerce, legal structure, etc.",
                "id": "a0Om0000005ehaBEAQ",
                "subType": "Business Assistance/Professional Services",
              },
              {
                "desc2": "",
                "description": "Assistance obtaining economic data including geographic and commercial real estate information through a variety of data sources such as ESRI and CoStar.",
                "id": "a0ODh000005jJR2MAM",
                "subType": "Economic Data",
              },
              {
                "desc2": "",
                "description": "Financial and technical assistance for brownfields assessment and remediation.",
                "id": "a0ODh000005jJQxMAM",
                "subType": "Environmental Brownfields Assistance",
              },
              {
                "desc2": "",
                "description": "Free one-on-one financial navigation and coaching.",
                "id": "a0Om0000005ehaCEAQ",
                "subType": "Financial Empowerment",
              },
              {
                "desc2": "",
                "description": "For general business assistance and resource service requests.",
                "id": "a0Om0000005authEAA",
                "subType": "General: Business Resources",
              },
              {
                "desc2": "",
                "description": "Assistance with permits (entertainment, business operations tax certificates, planning and building assistance, etc.), new or existing rules and regulations, etc.",
                "id": "a0ODh000005jJQsMAM",
                "subType": "Navigating City of Sacramento Permits and Regulatory Environment",
              },
              {
                "desc2": "",
                "description": "Resources for employers, and job and workforce readiness.",
                "id": "a0Om0000005YFcWEAW",
                "subType": "Workforce Development & Training",
              },
            ],
            "type": "Business Resources",
          },
          {
            "id": "a0Om0000003eSnEEAU",
            "subTypes": [
              {
                "desc2": "A private residence may not be used to conduct business as an auto repair shop. If you are reporting a suspected auto repair business, please provide the address, a detailed description of the work taking place, and the hours the activities are happening.",
                "description": "Report a home-based auto repair business or major auto repair taking place on the street.",
                "id": "a0Om0000003eSnMEAU",
                "subType": "Auto Repair",
              },
              {
                "desc2": "A basketball hoop is allowed on private property as long as it does not impede on the public right of way. Hoops may not be kept on a sidewalk, or in the street. When reporting a basketball hoop, please include the address where the hoop is located.",
                "description": "Report a basketball hoop on the street or sidewalk.",
                "id": "a0Om0000003eSnNEAU",
                "subType": "Basketball Hoop in Public Right of Way",
              },
              {
                "desc2": "The Business Compliance Unit works to address concerns about entertainment venues like bars or clubs. When reporting a concern, please include the address and a detailed description of the situation.",
                "description": "Report concerns with taxi's, entertainment venues like pubs or clubs.",
                "id": "a0Om0000003eSnJEAU",
                "subType": "Business Compliance Entertainment",
              },
              {
                "desc2": "The Business Compliance Unit works to address concerns regarding stray shopping carts. When reporting a concern, please include the address and a detailed description of the situation.",
                "description": "Report a stray shopping cart.",
                "id": "a0Om0000005DXeXEAW",
                "subType": "Business Compliance Shopping Cart",
              },
              {
                "desc2": "The Business Compliance Unit works to address concerns regarding short term rentals. When reporting a concern, please include the address and a detailed description of the situation.",
                "description": "Report a concern with a short term rental.",
                "id": "a0Om00000062dGjEAI",
                "subType": "Business Compliance Short Term Rental",
              },
              {
                "desc2": "The Business Compliance Unit works to address concerns regarding taxi cabs. When reporting a concern, please include a detailed description of the incident including the cab/taxi number and the location of travel.",
                "description": "Report a concern with a taxi cab.",
                "id": "a0Om0000005DXecEAG",
                "subType": "Business Compliance Taxi Cab",
              },
              {
                "desc2": "The Business Compliance Unit addresses concerns regarding vacant lots with no structures that have overgrown weeds or grass. When reporting a concern, please include the address closest to the lot and a detailed description of the concern.",
                "description": "Report a lot with overgrown weeds or grass.",
                "id": "a0Om0000005DXehEAG",
                "subType": "Business Compliance Weeds",
              },
              {
                "desc2": "Please provide us with a detailed description of your question or concern so that we can properly answer or redirect your request. Please note 311 is unable to provide legal advice or specific details regarding an open case.",
                "description": "Questions regarding code or housing enforcement policies.",
                "id": "a0Om0000003eSngEAE",
                "subType": "General: Code Enforcement",
              },
              {
                "desc2": "City crews abate graffiti & offer removal supplies & color matching assistance to the public. When reporting graffiti, please provide a detailed description of the type of graffiti and its location. If possible, please include a picture in your request.",
                "description": "Report graffiti on public and/or private property.",
                "id": "a0Om0000003eSnWEAU",
                "subType": "Graffiti",
              },
              {
                "desc2": "Housing officers respond to a variety of concerns regarding the safety of a property, residential or commercial. When submitting this case, please provide a detailed description of the issue and the property's address.",
                "description": "Report structural or electrical concerns with a property.",
                "id": "a0Om0000003eSnaEAE",
                "subType": "Housing Complaint",
              },
              {
                "desc2": "Code Enforcement addresses reports of junk/debris in the front, side, or rear of a property. Items on the sidewalk or street should be reported as illegal dumping. Please include an exact address and detailed description of the items in your request.",
                "description": "Report junk, debris, or trash on private property, in a front, rear or side yard or on a vacant lot. To report Illegal Dumping on a public street, please go to Solid Waste – Illegal Dumping. For dumping and trash related to encampments, use Homeless Camp – Trash.",
                "id": "a0Om0000003eSnOEAU",
                "subType": "Junk & Debris",
              },
              {
                "desc2": "The City will address concerns regarding overgrown grass or weeds on private property or greenery that is impeding on the public right of way. The City is unable to direct Citizens to prune or maintain trees on private property.",
                "description": "Report concerns with overgrown landscaping encroaching on the public right of way.",
                "id": "a0Om0000003eSnPEAU",
                "subType": "Landscaping",
              },
              {
                "desc2": "Code Enforcement will address reports of leaf blowers or loud mechanical noise like air conditioners. For concerns regarding loud music, or people, please contact Sac PD non-emergency at 916.808.5471.",
                "description": "Report mechanical noise like an air conditioner or leaf blower.",
                "id": "a0Om0000003eSnREAU",
                "subType": "Mechanical Noise Complaint",
              },
              {
                "desc2": "A 25' setback is required to store an RV on private property. RV's may not be parked or lived in on a driveway, side or rear yard, nor can they have electrical hookups. When submitting this request, please provide the address where the vehicle resides.",
                "description": "Report an occupied trailer or RV parked on private property.",
                "id": "a0Om0000003eSnQEAU",
                "subType": "Occupied Trailer On Private Property",
              },
              {
                "desc2": "Property owners are responsible for maintaining a proper pest control program. If you are a tenant whose landlord is refusing to address mice, roaches, or rats, please provide a detailed description of the problem and include your contact information.",
                "description": "Report roaches, mice, or rats in a rented property.",
                "id": "a0Om0000003eSnVEAU",
                "subType": "Pest",
              },
              {
                "desc2": "",
                "description": "Report a downed or damaged fence or an unfenced pool.",
                "id": "a0Om0000003eSnUEAU",
                "subType": "Fences",
              },
              {
                "desc2": "Signs or banners are generally not allowed in the public right-of-way. When reporting a sign or banner imposing on the public right of way, like a sidewalk or utility post, please describe the signs, its location, and include a picture when possible.",
                "description": "Report illegal signage in the public right of way.",
                "id": "a0Om0000003eSnSEAU",
                "subType": "Signs, Banners, or Fliers",
              },
              {
                "desc2": "",
                "description": "Report an unkempt pool, or other stagnant water causing mosquitos.",
                "id": "a0Om0000004sEToEAM",
                "subType": "Stagnant Water",
              },
              {
                "desc2": "Inoperable vehicles may not be stored in a driveway or a side yard that is visible from the street. Cars, trucks, RVs, or boats parked in driveways, or paved side yards are permitted, as long as they are whole and complete and capable of being driven.",
                "description": "Report a non-operational vehicle on private property, like a driveway.",
                "id": "a0Om0000003eSnKEAU",
                "subType": "Vehicle on Private Property",
              },
              {
                "desc2": "Unoccupied vehicles cannot be parked on a public street for more than 72 hours without moving. Occupied vehicles are currently exempt from this rule due to the stay at home order. Please include the vehicle's exact location in your request.",
                "description": "Report a vehicle parked on a City street in excess of 72 hours.",
                "id": "a0Om0000003eSnXEAU",
                "subType": "Vehicle Abandoned on Street",
              },
              {
                "desc2": "A permit is required for new construction, additions, remodeling, roofing, or repairs to electrical, mechanical, and plumbing systems. When reporting suspected work without a permit, please provide an exact address and a description of the work.",
                "description": "Report construction work believed to be taking place without a permit.",
                "id": "a0Om0000003eSnZEAU",
                "subType": "Work Without a Permit",
              },
              {
                "desc2": "Private properties are allowed one-yard sale per calendar year, not to exceed two consecutive days a year. When reporting excessive yard sales, please provide the property's exact address.",
                "description": "Report a property holding excessive yard or garage sales.",
                "id": "a0Om0000003eSnTEAU",
                "subType": "Yard or Garage Sale Complaint",
              },
              {
                "desc2": "Detached accessory structures, like a shed or garage, are not allowed in a front or street-side yard without a permit. Structures no larger than 10x12 are allowed without a permit in a backyard. Please provide an address when submitting this case.",
                "description": "Report a detached structure like a carport or shed in the front or rear yard.",
                "id": "a0Om0000003eSneEAE",
                "subType": "Zoning: Detatched Accessory Structure",
              },
              {
                "desc2": "Fences visible from the public right of way are required to be properly maintained so as not to create a hazard, public nuisance, or blight. Concerns with backyard fences are civil issues and will not be addressed by Code Enforcement.",
                "description": "Report a downed or damaged fence or an unfenced pool.",
                "id": "a0Om0000003eSndEAE",
                "subType": "Zoning: Fencing",
              },
              {
                "desc2": "A private residence may not be used to conduct business. When submitting a report for a suspected home-based business, please provide a detailed description of the suspected business and the home's exact address.",
                "description": "Report an unlicensed home-based business.",
                "id": "a0Om0000003eSnfEAE",
                "subType": "Zoning: Home Occupation",
              },
              {
                "desc2": "Zoning will address recycling centers, tire shops, or parking lots being operated out of inappropriately zoned lots. Zoning will also address private properties that have been over-paved. Please provide a detailed description and address for this case.",
                "description": "Report an unauthorized recycling center or overly paved front yard.",
                "id": "a0Om0000003eSncEAE",
                "subType": "Zoning: Improper Land Use or Overpavement",
              },
            ],
            "type": "Code Enforcement",
          },
          {
            "id": "a0Om0000003e1eCEAQ",
            "subTypes": [
              {
                "desc2": "If you're requesting information about City drain services, please provide the address you're inquiring about so that we can better serve you. Situations that are urgent in nature, like a plugged drain, should be called into 311 or 916.808.5011.",
                "description": "Non-urgent general drains questions. Please call for situations that require immediate attention.",
                "id": "a0Om0000003e1enEAA",
                "subType": "General: Drains",
              },
            ],
            "type": "Drains",
          },
          {
            "id": "a0Om0000003eSnmEAE",
            "subTypes": [
              {
                "desc2": "Reports of camps are reviewed by the Department of Community Response. Due to the high volume of reports received, a response may not be possible in all cases. Concerns for personal safety or suspected illegal activity should be reported to Sac PD.",
                "description": "Report a camp or homeless concern on public property, excluding a park or bike trail.",
                "id": "a0Om0000003eSnnEAE",
                "subType": "Homeless Concern",
              },
              {
                "desc2": "Please use this request type to submit a report of trash left behind from an encampment or to request trash clean-up around an encampment.",
                "description": "To report trash from a homeless camp.",
                "id": "a0Om0000005oGQLEA2",
                "subType": "Homeless Camp-Trash",
              },
              {
                "desc2": "Report encampments within 500 feet from a Pre-K – 12 School.",
                "description": "Homeless Encampment Blocking Sidewalk",
                "id": "a0Om0000005qSdnEAE",
                "subType": "Homeless Encampment 500ft from School",
              },
              {
                "desc2": "Reports of camps at parks or bike trails are responded to by Park Rangers. When submitting a request, please provide a detailed description of the concern and its location within the park.",
                "description": "Report a homeless camp at a park or bike trail.",
                "id": "a0Om0000004sETpEAM",
                "subType": "Homeless Camp at Park or Bike Trail",
              },
            ],
            "type": "Homeless Camp",
          },
          {
            "id": "a0Om0000003eSnoEAE",
            "subTypes": [
              {
                "desc2": "Reports of broken, vandalized, or otherwise non-working meters are reviewed by the City's Meter Shop. You may choose to stay parked at a broken meter at your own risk. Issued citations may be contested via the City Website.",
                "description": "Report a broken or malfunctioning meter or payment machine.",
                "id": "a0Om0000003eSnpEAE",
                "subType": "Broken Meter or Payment Machine",
              },
              {
                "desc2": "Parking Customer Service can assist with questions regarding monthly parking, IOU's, requests to contact Parking Staff, and lots more. Staff cannot retract a citation. When submitting a request, please include your contact information.",
                "description": "Questions regarding monthly parking, IOU's, or requests to contact Parking Staff.",
                "id": "a0Om0000003eSnqEAE",
                "subType": "Customer Service: Parking",
              },
              {
                "desc2": "Officers are on duty 7:30am-10pm Sun-Mon and 7:30am-11pm Tues-Sat, excluding Holidays. Please include the make, model, vehicle plate number as well as a description of the violation and location.",
                "description": "Report parking violations (blocking hydrant, parked in "no parking," etc.)",
                "id": "a0Om0000003eSnrEAE",
                "subType": "Enforcement Request",
              },
              {
                "desc2": "If you have a general question about on or off-street parking services, please provide us with your contact information and a description of the concern. For citation contests, please follow the instructions located on the back of your citation.",
                "description": "General questions regarding parking policies or procedures.",
                "id": "a0Om0000003eSnsEAE",
                "subType": "General: Parking",
              },
            ],
            "type": "Parking",
          },
          {
            "id": "a0Om0000003eI2lEAE",
            "subTypes": [
              {
                "desc2": "The Park Maintenance team responds to reports of a City Park fence or gate that is in need of repair. Please include a detailed description of the fence's location and the name of the park when submitting your request.",
                "description": "Report concerns with a fence or gate at a City Park.",
                "id": "a0Om0000003eI2nEAE",
                "subType": "Broken or Damaged Park Fence or Gate",
              },
              {
                "desc2": "If you have general questions about City parks, please provide us with a detailed description of your concern and your contact information. You may also want to check our Answers page for answers to our most asked questions.",
                "description": "Questions about park policies or procedures.",
                "id": "a0Om0000003eI2mEAE",
                "subType": "General: Parks",
              },
              {
                "desc2": "The Park Maintenance team responds to requests for clean up of a City Park. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name.",
                "description": "Request grounds cleaning or removal of trash at a City Park.",
                "id": "a0Om0000003eI2oEAE",
                "subType": "Grounds Cleaning",
              },
              {
                "desc2": "Faulty irrigation devices, like sprinklers, are repaired by our Park Maintenance Team. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name.",
                "description": "Report concerns with sprinkler or irrigation systems at a City Park.",
                "id": "a0Om0000003eI2pEAE",
                "subType": "Irrigation",
              },
              {
                "desc2": "Reports of overgrown weeds or grass are addressed by our Park Maintenance Team. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name.",
                "description": "Request mowing or trimming of trees or landscapes at a City Park.",
                "id": "a0Om0000003eI2rEAE",
                "subType": "Mowing or Trimming Request",
              },
              {
                "desc2": "If you have observed a concern at a park that does not fit into the available categories, please provide a detailed description of the concern, its location in the park, and the park name.",
                "description": "Report a non-listed concern to our Parks Department.",
                "id": "a0Om0000003eI2sEAE",
                "subType": "Other Park Concern",
              },
              {
                "desc2": "The maintenance and safety of our park playground equipment are important to us. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name.",
                "description": "Report concerns with playground or court equipment.",
                "id": "a0Om0000003eI2tEAE",
                "subType": "Park Playground",
              },
              {
                "desc2": "Park Rangers respond to concerns regarding safety at a City park. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name. A Ranger will respond as quickly as possible.",
                "description": "Request a Park Ranger for safety concerns.",
                "id": "a0Om0000003eI2vEAE",
                "subType": "Request a Park Ranger",
              },
              {
                "desc2": "Our Park Maintenance Team responds to concerns regarding the cleanliness or maintenance of park restrooms. Please include the details and the park name. For restroom concerns on your scheduled reservation day, please call us at 311 or 916.808.5011.",
                "description": "Request clean up or maintenance for a park restroom.",
                "id": "a0Om0000003eI2uEAE",
                "subType": "Restrooms",
              },
            ],
            "type": "Parks",
          },
          {
            "id": "a0Om0000003e80xEAA",
            "subTypes": [
              {
                "desc2": "If you are requesting information about City Sewer services, please provide us with an address. Situations that require an immediate response, like overflowing or backed-up sewage, should be called in so that a crew can respond as quickly as possible.",
                "description": "General sewer questions.",
                "id": "a0Om0000003e816EAA",
                "subType": "General: Sewer",
              },
            ],
            "type": "Sewer",
          },
          {
            "id": "a0Om0000003eI2iEAE",
            "subTypes": [
              {
                "desc2": "Shared bikes or scooters should be returned to a bike rack or drop zone after use. If you observe a BLACK bike or scooter that is illegally parked, please submit a request and include a detailed description of its location.",
                "description": "Report an illegally parked BLACK BIRD bike or scooter.",
                "id": "a0Om0000004C63xEAC",
                "subType": "Bird",
              },
              {
                "desc2": "Shared bikes or scooters should be returned to a bike rack or drop zone after use. If you observe a BLUE and BLACK scooter that is illegally parked, please submit a request and include a detailed description of its location.",
                "description": "Report an illegally parked BLUE and BLACK HELBIZ scooter.",
                "id": "a0Om0000005xzDSEAY",
                "subType": "Helbiz",
              },
              {
                "desc2": "Shared bikes or scooters should be returned to a bike rack or drop zone after use. If you observe a GREEN bike or scooter that is illegally parked, please submit a request and include a detailed description of its location.",
                "description": "Report an illegally parked GREEN LIME bike or scooter .",
                "id": "a0Om0000003eI2kEAE",
                "subType": "Lime",
              },
              {
                "desc2": "Shared bikes or scooters should be returned to a bike rack or drop zone after use. If you observe a RED and BLACK scooter that is illegally parked, please submit a request and include a detailed description of its location.",
                "description": "Report an illegally parked RED and BLACK RAZOR bike or scooter.",
                "id": "a0Om0000005dycyEAA",
                "subType": "Razor",
              },
              {
                "desc2": "Shared scooters should be returned to a bike rack or drop zone after use. If you observe a Yellow and Gray scooter that is illegally parked, please submit a request and include a detailed description of its location.",
                "description": "Report an illegally parked Superpedestrian scooter.",
                "id": "a0ODh000005jqrBMAQ",
                "subType": "Superpedestrian",
              },
            ],
            "type": "Shared Rideables",
          },
          {
            "id": "a0Om0000003dz9tEAA",
            "subTypes": [
              {
                "desc2": "If you are requesting information about City trash services, please provide us with the address you're inquiring about so that we can better serve you. For assistance with your bill, or to make a payment, please call 916-808-5454 and select option 2.",
                "description": "Questions or concerns regarding Solid Waste policies or procedures. For assistance with a container issue, such as repair, replacement or missing cans please call 311.",
                "id": "a0Om0000003dzA6EAI",
                "subType": "General: Solid Waste",
              },
              {
                "desc2": "Our Solid Waste Team removes illegal dumping in the public right of way. They can also investigate and prosecute individuals who illegally dump. To report trash on private property, please submit a Code Enforcement case.",
                "description": "Report illegal dumping on a public street. For dumping and trash related to encampments, use Homeless Camp – Trash. For Junk and Debris on private property use Code Enforcement – Junk & Debris.",
                "id": "a0Om0000004knaiEAA",
                "subType": "Illegal Dumping",
              },
              {
                "desc2": "If we missed servicing your container, please let us know so that we schedule return service. To ensure we're able to go back out, please report missed service within two days of your collection day.",
                "description": "Report a missed or partially serviced container.",
                "id": "a0Om0000003dzABEAY",
                "subType": "Missed Weekly Collection",
              },
              {
                "desc2": "",
                "description": "General noise complaint.",
                "id": "a0Om00000062fTKEAY",
                "subType": "Noise Complaint - RSW",
              },
              {
                "desc2": "A printed recycle guide that includes a dump coupon is mailed out mid-year. Guides are mailed to the service address, not the billing address. If you didn't receive a guide or misplaced it, we are able to send out a replacement.",
                "description": "Request a replacement dump coupon or recycle guide.",
                "id": "a0Om0000003dzA7EAI",
                "subType": "Recycle Guide or Dump Coupon Request",
              },
              {
                "desc2": "Household junk appointments are only available February through October. Appliance/e-waste appointments are available year-round. Contact information is required to schedule any appointment based pick-up.",
                "description": "Request an appliance/ewaste, or motor oil appointment. Contact information is required to schedule any appointment based pick-up. Free household junk appointments have all been filled for this year. Scheduling will resume in February 2024.",
                "id": "a0Om0000003dzA8EAI",
                "subType": "Schedule an Appointment Based Pick-Up",
              },
            ],
            "type": "Solid Waste",
          },
          {
            "id": "a0Om0000003eI2TEAU",
            "subTypes": [
              {
                "desc2": "The City will install bicycle racks or shared-rideable drop zones on public property where there is a demonstrated need. Please include your property address when submitting this request.",
                "description": "Report concerns with existing bike racks or request a new bike rack installation.",
                "id": "a0Om0000003eI2VEAU",
                "subType": "Bike Rack Issues",
              },
              {
                "desc2": "The City of Sacramento continues to make our City friendlier for bicycling. If you observe concerns with a bikeway, please report it. When submitting this request, please provide a detailed summary of the concern and its location.",
                "description": "Report concerns with a bikeway, such as unsafe conditions like trash, or glass.",
                "id": "a0Om0000003eI2WEAU",
                "subType": "Bikeway Issues",
              },
              {
                "desc2": "The City maintains all curbs. If you observe a concern, please submit a request that includes a detailed description and the location.",
                "description": "Report concerns regarding a curb or gutter such as unsafe conditions, or grading issues.",
                "id": "a0Om0000003eI2XEAU",
                "subType": "Curb or Gutter",
              },
              {
                "desc2": "If you're requesting information about general street services, please provide the address you're inquiring about so that we can better serve you.",
                "description": "General questions regarding policies and procedures about City Streets.",
                "id": "a0Om0000003eI2UEAU",
                "subType": "General: Streets",
              },
              {
                "desc2": "Our Street Maintenance team responds to reports of potholes in real-time. When submitting a request, please provide a detailed description of the concern and its location.",
                "description": "Report a pothole on a City street.",
                "id": "a0Om0000003eI2aEAE",
                "subType": "Pothole",
              },
              {
                "desc2": "Malfunctioning street lights can be repaired by our City team. When submitting a request, please provide a detailed description.",
                "description": "Report a malfunctioning lighting fixture, including street lamps.",
                "id": "a0Om0000003eI2eEAE",
                "subType": "Street Lighting",
              },
              {
                "desc2": "Property owners are responsible for maintaining the sidewalk in front of their properties. The City will inspect reports of damaged sidewalks. If you observe a concern, please submit a request that includes a detailed description and the location.",
                "description": "Report a broken, damaged, or unsafe sidewalk.",
                "id": "a0Om0000003eI2bEAE",
                "subType": "Sidewalk",
              },
              {
                "desc2": "The City maintains street signage. If you observe a concern, please submit a request that includes a detailed description and the location.",
                "description": "Report missing or damaged signs or repainting of street markings.",
                "id": "a0Om0000003eI2cEAE",
                "subType": "Signs and Markings",
              },
              {
                "desc2": "Reports of items in the roadway should be reported immediately. When submitting a request, please include a detailed description of the concern and its location.",
                "description": "Report items blocking a lane of traffic.",
                "id": "a0Om0000003dzAFEAY",
                "subType": "Street Maintenance",
              },
              {
                "desc2": "Concerns with the landscaped section between the sidewalk & street, like overflowing sprinklers, are addressed in real-time by our City crew. When submitting a case, please provide a detailed description of the concern and its location.",
                "description": "Report concerns with the landscaped section between the sidewalk & street, like overflowing sprinklers.",
                "id": "a0Om0000003eI2fEAE",
                "subType": "Streetscapes",
              },
              {
                "desc2": "Requests for new speed bumps, signage, or street markings are reviewed by our Transportation team. Please include a detailed description of the concern and location. This request requires your contact information. Anonymous requests will not be reviewed.",
                "description": "Request new speed bumps, signage, or street markings.",
                "id": "a0Om0000003eI2hEAE",
                "subType": "Traffic Investigation",
              },
              {
                "desc2": "Concerns with traffic signals should be reported immediately. When submitting a concern, please include a detailed description of the complaint, the location, and your direction of travel.",
                "description": "Report a malfunctioning traffic signal.",
                "id": "a0Om0000003eI2gEAE",
                "subType": "Traffic Signals",
              },
            ],
            "type": "Streets",
          },
          {
            "id": "a0Om0000003eAxdEAE",
            "subTypes": [
              {
                "desc2": "For general questions about the services our Urban Forestry team provides, please submit a request and provide us with a detailed description of your concern. You may also want to check our Answers page for answers to our most asked questions.",
                "description": "Questions regarding urban forestry policies or procedures.",
                "id": "a0Om0000003eAxeEAE",
                "subType": "General: Urban Forestry",
              },
              {
                "desc2": "The City of Sacramento's Urban Forestry division provides maintenance to city street trees, trees in the public right-of-way, and trees on City property. They also inspect trees on private property to determine if a tree qualifies for removal.",
                "description": "Request inspection or maintenance of a protected or City tree.",
                "id": "a0Om0000003eAxfEAE",
                "subType": "Tree Service Request",
              },
            ],
            "type": "Urban Forestry",
          },
          {
            "id": "a0Om0000003eSnhEAE",
            "subTypes": [
              {
                "desc2": "If you're requesting information about City utility services, please provide the address you're inquiring about so that we can better serve you. For assistance with your bill, or to make a payment, please call 916-808-5454 and select option 2.",
                "description": "General utility billing questions.",
                "id": "a0Om0000003eSniEAE",
                "subType": "General: Utility Billing",
              },
            ],
            "type": "Utility Billing",
          },
          {
            "id": "a0Om0000003e81DEAQ",
            "subTypes": [
              {
                "desc2": "If you're requesting information about City water services, please provide the address you're inquiring about so that we can better serve you. Situations that are urgent in nature, like a leak or broken pipe, should be called into 311 or 916.808.5011.",
                "description": "General water service questions.",
                "id": "a0Om0000003e81JEAQ",
                "subType": "General: Water",
              },
              {
                "desc2": "Request information about virtual Water Wise House Calls, business and residential water conservation rebates or leak investigation if a leak letter was received.",
                "description": "Request information about virtual Water Wise House Calls, business and residential water conservation rebates or leak investigation if a leak letter was received.",
                "id": "a0Om0000003e81SEAQ",
                "subType": "Water Conservation",
              },
              {
                "desc2": "When reporting information to the City, please be sure to include; days and times the watering is occurring, the address of where the water misuse is taking place, and any pattern to the watering, like the frequency.",
                "description": "Report a water use concern.",
                "id": "a0Om0000003e81REAQ",
                "subType": "Water Use Complaint",
              },
            ],
            "type": "Water",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={true}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      persistentScrollbar={true}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "backgroundColor": "#ffffff",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "backgroundColor": "#203d61",
                    "borderRadius": 10,
                    "color": "white",
                    "fontFamily": "jbm",
                    "fontSize": 14,
                    "marginHorizontal": 3,
                    "padding": 10,
                  },
                  {
                    "backgroundColor": "#203d61",
                    "color": "#E7EAED",
                  },
                ]
              }
            >
              Animal Care
            </Text>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "backgroundColor": "#ffffff",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "backgroundColor": "#203d61",
                    "borderRadius": 10,
                    "color": "white",
                    "fontFamily": "jbm",
                    "fontSize": 14,
                    "marginHorizontal": 3,
                    "padding": 10,
                  },
                  {
                    "backgroundColor": "#203d61",
                    "color": "#E7EAED",
                  },
                ]
              }
            >
              Building and Planning
            </Text>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "backgroundColor": "#ffffff",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "backgroundColor": "#203d61",
                    "borderRadius": 10,
                    "color": "white",
                    "fontFamily": "jbm",
                    "fontSize": 14,
                    "marginHorizontal": 3,
                    "padding": 10,
                  },
                  {
                    "backgroundColor": "#203d61",
                    "color": "#E7EAED",
                  },
                ]
              }
            >
              Business Resources
            </Text>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "backgroundColor": "#ffffff",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "backgroundColor": "#203d61",
                    "borderRadius": 10,
                    "color": "white",
                    "fontFamily": "jbm",
                    "fontSize": 14,
                    "marginHorizontal": 3,
                    "padding": 10,
                  },
                  {
                    "backgroundColor": "#203d61",
                    "color": "#E7EAED",
                  },
                ]
              }
            >
              Code Enforcement
            </Text>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "backgroundColor": "#ffffff",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "backgroundColor": "#203d61",
                    "borderRadius": 10,
                    "color": "white",
                    "fontFamily": "jbm",
                    "fontSize": 14,
                    "marginHorizontal": 3,
                    "padding": 10,
                  },
                  {
                    "backgroundColor": "#203d61",
                    "color": "#E7EAED",
                  },
                ]
              }
            >
              Drains
            </Text>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "backgroundColor": "#ffffff",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "backgroundColor": "#203d61",
                    "borderRadius": 10,
                    "color": "white",
                    "fontFamily": "jbm",
                    "fontSize": 14,
                    "marginHorizontal": 3,
                    "padding": 10,
                  },
                  {
                    "backgroundColor": "#203d61",
                    "color": "#E7EAED",
                  },
                ]
              }
            >
              Homeless Camp
            </Text>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "backgroundColor": "#ffffff",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "backgroundColor": "#203d61",
                    "borderRadius": 10,
                    "color": "white",
                    "fontFamily": "jbm",
                    "fontSize": 14,
                    "marginHorizontal": 3,
                    "padding": 10,
                  },
                  {
                    "backgroundColor": "#203d61",
                    "color": "#E7EAED",
                  },
                ]
              }
            >
              Parking
            </Text>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "backgroundColor": "#ffffff",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "backgroundColor": "#203d61",
                    "borderRadius": 10,
                    "color": "white",
                    "fontFamily": "jbm",
                    "fontSize": 14,
                    "marginHorizontal": 3,
                    "padding": 10,
                  },
                  {
                    "backgroundColor": "#203d61",
                    "color": "#E7EAED",
                  },
                ]
              }
            >
              Parks
            </Text>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "backgroundColor": "#ffffff",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "backgroundColor": "#203d61",
                    "borderRadius": 10,
                    "color": "white",
                    "fontFamily": "jbm",
                    "fontSize": 14,
                    "marginHorizontal": 3,
                    "padding": 10,
                  },
                  {
                    "backgroundColor": "#203d61",
                    "color": "#E7EAED",
                  },
                ]
              }
            >
              Sewer
            </Text>
          </View>
        </View>
        <View
          onFocusCapture={[Function]}
          onLayout={[Function]}
          style={
            [
              {
                "flexDirection": "row",
              },
              null,
            ]
          }
        >
          <View
            accessibilityState={
              {
                "busy": undefined,
                "checked": undefined,
                "disabled": undefined,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              {
                "backgroundColor": "#ffffff",
                "opacity": 1,
              }
            }
          >
            <Text
              style={
                [
                  {
                    "backgroundColor": "#203d61",
                    "borderRadius": 10,
                    "color": "white",
                    "fontFamily": "jbm",
                    "fontSize": 14,
                    "marginHorizontal": 3,
                    "padding": 10,
                  },
                  {
                    "backgroundColor": "#203d61",
                    "color": "#E7EAED",
                  },
                ]
              }
            >
              Shared Rideables
            </Text>
          </View>
        </View>
        <View
          style={
            {
              "width": 0,
            }
          }
        />
      </View>
    </RCTScrollView>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#ffffff",
          "opacity": 1,
        }
      }
    >
      <Text
        style={
          [
            {
              "backgroundColor": "#333232",
              "color": "white",
              "fontFamily": "jbm",
              "fontSize": 14,
              "marginHorizontal": 3,
              "paddingHorizontal": 5,
              "paddingVertical": 10,
            },
            {
              "backgroundColor": "#ffffff",
              "color": "#000000",
            },
          ]
        }
      >
        Clear Filter
      </Text>
    </View>
  </View>
  <RCTScrollView
    data={
      [
        {
          "id": "a0Om0000003dz9rEAA",
          "subTypes": [
            {
              "desc2": "Front Street staff are available to help answer questions about adoptions, spay and neuter resources, lost and found pets, licensing, and nuisance barking. As barking complaints may not be made anonymously, please provide us with your name and address.",
              "description": "Questions about adoptions, spay/neuter resources, found animals, licensing and barking.",
              "id": "a0Om0000003dz9wEAA",
              "subType": "Contact Front Street Shelter",
            },
            {
              "desc2": "An Animal Control Officer will respond to requests to remove a dead animal from the public right-of-way, like a sidewalk or street. Deceased animals weighing 10 pounds or less may be placed in a plastic bag and disposed of in a trash receptacle.",
              "description": "Report a dead animal in the public right of way.",
              "id": "a0Om0000003dzA0EAI",
              "subType": "Dead Animal",
            },
            {
              "desc2": "If you’re inquiring about the status or identification of an animal, please visit us in person. For all other questions, please describe your concern in detail and provide your contact information so that we may assist you.",
              "description": "General Animal Control Questions",
              "id": "a0Om0000003dzA5EAI",
              "subType": "General: Animal Control",
            },
            {
              "desc2": "Suspected animal neglect should be reported to Animal Control so that an Officer can check on the animal's condition. When submitting this request, please provide the address where the animal lives and a detailed description of the animal and concern.",
              "description": "Report concerns with an owned animal.",
              "id": "a0Om0000003dzA1EAI",
              "subType": "Pet Complaint or Concerns",
            },
            {
              "desc2": "If you see a loose dog in a busy area, it’s best not to try to catch them, as they may run into traffic. If you’ve already captured the dog, you can bring the dog to the shelter between 12pm-5pm 7 days a week. Appointments are highly encouraged.",
              "description": "Report an injured, sick, or aggressive stray animal.",
              "id": "a0Om0000003dzA3EAI",
              "subType": "Stray or Loose Animal",
            },
          ],
          "type": "Animal Care",
        },
        {
          "id": "a0Om0000003eSnjEAE",
          "subTypes": [
            {
              "desc2": "Limited in-person appointments for building and planning are available Tuesdays and Wednesdays from 9:00 a.m. to 3:30 p.m. Assistance is also available by email. Please include the address and a detailed summary so that we can better assist you.",
              "description": "Questions or concerns regarding building, planning, or zoning.",
              "id": "a0Om0000003eSnlEAE",
              "subType": "General: Building and Planning",
            },
          ],
          "type": "Building and Planning",
        },
        {
          "id": "a0Om0000005austEAA",
          "subTypes": [
            {
              "desc2": "",
              "description": "Connecting businesses to lending partners and grant opportunities.",
              "id": "a0Om0000005eha5EAA",
              "subType": "Access to Capital",
            },
            {
              "desc2": "",
              "description": "Business technical assistance including, but not limited to: accounting, human resources, marketing, operations, site selection, strategic planning, succession planning, e-commerce, legal structure, etc.",
              "id": "a0Om0000005ehaBEAQ",
              "subType": "Business Assistance/Professional Services",
            },
            {
              "desc2": "",
              "description": "Assistance obtaining economic data including geographic and commercial real estate information through a variety of data sources such as ESRI and CoStar.",
              "id": "a0ODh000005jJR2MAM",
              "subType": "Economic Data",
            },
            {
              "desc2": "",
              "description": "Financial and technical assistance for brownfields assessment and remediation.",
              "id": "a0ODh000005jJQxMAM",
              "subType": "Environmental Brownfields Assistance",
            },
            {
              "desc2": "",
              "description": "Free one-on-one financial navigation and coaching.",
              "id": "a0Om0000005ehaCEAQ",
              "subType": "Financial Empowerment",
            },
            {
              "desc2": "",
              "description": "For general business assistance and resource service requests.",
              "id": "a0Om0000005authEAA",
              "subType": "General: Business Resources",
            },
            {
              "desc2": "",
              "description": "Assistance with permits (entertainment, business operations tax certificates, planning and building assistance, etc.), new or existing rules and regulations, etc.",
              "id": "a0ODh000005jJQsMAM",
              "subType": "Navigating City of Sacramento Permits and Regulatory Environment",
            },
            {
              "desc2": "",
              "description": "Resources for employers, and job and workforce readiness.",
              "id": "a0Om0000005YFcWEAW",
              "subType": "Workforce Development & Training",
            },
          ],
          "type": "Business Resources",
        },
        {
          "id": "a0Om0000003eSnEEAU",
          "subTypes": [
            {
              "desc2": "A private residence may not be used to conduct business as an auto repair shop. If you are reporting a suspected auto repair business, please provide the address, a detailed description of the work taking place, and the hours the activities are happening.",
              "description": "Report a home-based auto repair business or major auto repair taking place on the street.",
              "id": "a0Om0000003eSnMEAU",
              "subType": "Auto Repair",
            },
            {
              "desc2": "A basketball hoop is allowed on private property as long as it does not impede on the public right of way. Hoops may not be kept on a sidewalk, or in the street. When reporting a basketball hoop, please include the address where the hoop is located.",
              "description": "Report a basketball hoop on the street or sidewalk.",
              "id": "a0Om0000003eSnNEAU",
              "subType": "Basketball Hoop in Public Right of Way",
            },
            {
              "desc2": "The Business Compliance Unit works to address concerns about entertainment venues like bars or clubs. When reporting a concern, please include the address and a detailed description of the situation.",
              "description": "Report concerns with taxi's, entertainment venues like pubs or clubs.",
              "id": "a0Om0000003eSnJEAU",
              "subType": "Business Compliance Entertainment",
            },
            {
              "desc2": "The Business Compliance Unit works to address concerns regarding stray shopping carts. When reporting a concern, please include the address and a detailed description of the situation.",
              "description": "Report a stray shopping cart.",
              "id": "a0Om0000005DXeXEAW",
              "subType": "Business Compliance Shopping Cart",
            },
            {
              "desc2": "The Business Compliance Unit works to address concerns regarding short term rentals. When reporting a concern, please include the address and a detailed description of the situation.",
              "description": "Report a concern with a short term rental.",
              "id": "a0Om00000062dGjEAI",
              "subType": "Business Compliance Short Term Rental",
            },
            {
              "desc2": "The Business Compliance Unit works to address concerns regarding taxi cabs. When reporting a concern, please include a detailed description of the incident including the cab/taxi number and the location of travel.",
              "description": "Report a concern with a taxi cab.",
              "id": "a0Om0000005DXecEAG",
              "subType": "Business Compliance Taxi Cab",
            },
            {
              "desc2": "The Business Compliance Unit addresses concerns regarding vacant lots with no structures that have overgrown weeds or grass. When reporting a concern, please include the address closest to the lot and a detailed description of the concern.",
              "description": "Report a lot with overgrown weeds or grass.",
              "id": "a0Om0000005DXehEAG",
              "subType": "Business Compliance Weeds",
            },
            {
              "desc2": "Please provide us with a detailed description of your question or concern so that we can properly answer or redirect your request. Please note 311 is unable to provide legal advice or specific details regarding an open case.",
              "description": "Questions regarding code or housing enforcement policies.",
              "id": "a0Om0000003eSngEAE",
              "subType": "General: Code Enforcement",
            },
            {
              "desc2": "City crews abate graffiti & offer removal supplies & color matching assistance to the public. When reporting graffiti, please provide a detailed description of the type of graffiti and its location. If possible, please include a picture in your request.",
              "description": "Report graffiti on public and/or private property.",
              "id": "a0Om0000003eSnWEAU",
              "subType": "Graffiti",
            },
            {
              "desc2": "Housing officers respond to a variety of concerns regarding the safety of a property, residential or commercial. When submitting this case, please provide a detailed description of the issue and the property's address.",
              "description": "Report structural or electrical concerns with a property.",
              "id": "a0Om0000003eSnaEAE",
              "subType": "Housing Complaint",
            },
            {
              "desc2": "Code Enforcement addresses reports of junk/debris in the front, side, or rear of a property. Items on the sidewalk or street should be reported as illegal dumping. Please include an exact address and detailed description of the items in your request.",
              "description": "Report junk, debris, or trash on private property, in a front, rear or side yard or on a vacant lot. To report Illegal Dumping on a public street, please go to Solid Waste – Illegal Dumping. For dumping and trash related to encampments, use Homeless Camp – Trash.",
              "id": "a0Om0000003eSnOEAU",
              "subType": "Junk & Debris",
            },
            {
              "desc2": "The City will address concerns regarding overgrown grass or weeds on private property or greenery that is impeding on the public right of way. The City is unable to direct Citizens to prune or maintain trees on private property.",
              "description": "Report concerns with overgrown landscaping encroaching on the public right of way.",
              "id": "a0Om0000003eSnPEAU",
              "subType": "Landscaping",
            },
            {
              "desc2": "Code Enforcement will address reports of leaf blowers or loud mechanical noise like air conditioners. For concerns regarding loud music, or people, please contact Sac PD non-emergency at 916.808.5471.",
              "description": "Report mechanical noise like an air conditioner or leaf blower.",
              "id": "a0Om0000003eSnREAU",
              "subType": "Mechanical Noise Complaint",
            },
            {
              "desc2": "A 25' setback is required to store an RV on private property. RV's may not be parked or lived in on a driveway, side or rear yard, nor can they have electrical hookups. When submitting this request, please provide the address where the vehicle resides.",
              "description": "Report an occupied trailer or RV parked on private property.",
              "id": "a0Om0000003eSnQEAU",
              "subType": "Occupied Trailer On Private Property",
            },
            {
              "desc2": "Property owners are responsible for maintaining a proper pest control program. If you are a tenant whose landlord is refusing to address mice, roaches, or rats, please provide a detailed description of the problem and include your contact information.",
              "description": "Report roaches, mice, or rats in a rented property.",
              "id": "a0Om0000003eSnVEAU",
              "subType": "Pest",
            },
            {
              "desc2": "",
              "description": "Report a downed or damaged fence or an unfenced pool.",
              "id": "a0Om0000003eSnUEAU",
              "subType": "Fences",
            },
            {
              "desc2": "Signs or banners are generally not allowed in the public right-of-way. When reporting a sign or banner imposing on the public right of way, like a sidewalk or utility post, please describe the signs, its location, and include a picture when possible.",
              "description": "Report illegal signage in the public right of way.",
              "id": "a0Om0000003eSnSEAU",
              "subType": "Signs, Banners, or Fliers",
            },
            {
              "desc2": "",
              "description": "Report an unkempt pool, or other stagnant water causing mosquitos.",
              "id": "a0Om0000004sEToEAM",
              "subType": "Stagnant Water",
            },
            {
              "desc2": "Inoperable vehicles may not be stored in a driveway or a side yard that is visible from the street. Cars, trucks, RVs, or boats parked in driveways, or paved side yards are permitted, as long as they are whole and complete and capable of being driven.",
              "description": "Report a non-operational vehicle on private property, like a driveway.",
              "id": "a0Om0000003eSnKEAU",
              "subType": "Vehicle on Private Property",
            },
            {
              "desc2": "Unoccupied vehicles cannot be parked on a public street for more than 72 hours without moving. Occupied vehicles are currently exempt from this rule due to the stay at home order. Please include the vehicle's exact location in your request.",
              "description": "Report a vehicle parked on a City street in excess of 72 hours.",
              "id": "a0Om0000003eSnXEAU",
              "subType": "Vehicle Abandoned on Street",
            },
            {
              "desc2": "A permit is required for new construction, additions, remodeling, roofing, or repairs to electrical, mechanical, and plumbing systems. When reporting suspected work without a permit, please provide an exact address and a description of the work.",
              "description": "Report construction work believed to be taking place without a permit.",
              "id": "a0Om0000003eSnZEAU",
              "subType": "Work Without a Permit",
            },
            {
              "desc2": "Private properties are allowed one-yard sale per calendar year, not to exceed two consecutive days a year. When reporting excessive yard sales, please provide the property's exact address.",
              "description": "Report a property holding excessive yard or garage sales.",
              "id": "a0Om0000003eSnTEAU",
              "subType": "Yard or Garage Sale Complaint",
            },
            {
              "desc2": "Detached accessory structures, like a shed or garage, are not allowed in a front or street-side yard without a permit. Structures no larger than 10x12 are allowed without a permit in a backyard. Please provide an address when submitting this case.",
              "description": "Report a detached structure like a carport or shed in the front or rear yard.",
              "id": "a0Om0000003eSneEAE",
              "subType": "Zoning: Detatched Accessory Structure",
            },
            {
              "desc2": "Fences visible from the public right of way are required to be properly maintained so as not to create a hazard, public nuisance, or blight. Concerns with backyard fences are civil issues and will not be addressed by Code Enforcement.",
              "description": "Report a downed or damaged fence or an unfenced pool.",
              "id": "a0Om0000003eSndEAE",
              "subType": "Zoning: Fencing",
            },
            {
              "desc2": "A private residence may not be used to conduct business. When submitting a report for a suspected home-based business, please provide a detailed description of the suspected business and the home's exact address.",
              "description": "Report an unlicensed home-based business.",
              "id": "a0Om0000003eSnfEAE",
              "subType": "Zoning: Home Occupation",
            },
            {
              "desc2": "Zoning will address recycling centers, tire shops, or parking lots being operated out of inappropriately zoned lots. Zoning will also address private properties that have been over-paved. Please provide a detailed description and address for this case.",
              "description": "Report an unauthorized recycling center or overly paved front yard.",
              "id": "a0Om0000003eSncEAE",
              "subType": "Zoning: Improper Land Use or Overpavement",
            },
          ],
          "type": "Code Enforcement",
        },
        {
          "id": "a0Om0000003e1eCEAQ",
          "subTypes": [
            {
              "desc2": "If you're requesting information about City drain services, please provide the address you're inquiring about so that we can better serve you. Situations that are urgent in nature, like a plugged drain, should be called into 311 or 916.808.5011.",
              "description": "Non-urgent general drains questions. Please call for situations that require immediate attention.",
              "id": "a0Om0000003e1enEAA",
              "subType": "General: Drains",
            },
          ],
          "type": "Drains",
        },
        {
          "id": "a0Om0000003eSnmEAE",
          "subTypes": [
            {
              "desc2": "Reports of camps are reviewed by the Department of Community Response. Due to the high volume of reports received, a response may not be possible in all cases. Concerns for personal safety or suspected illegal activity should be reported to Sac PD.",
              "description": "Report a camp or homeless concern on public property, excluding a park or bike trail.",
              "id": "a0Om0000003eSnnEAE",
              "subType": "Homeless Concern",
            },
            {
              "desc2": "Please use this request type to submit a report of trash left behind from an encampment or to request trash clean-up around an encampment.",
              "description": "To report trash from a homeless camp.",
              "id": "a0Om0000005oGQLEA2",
              "subType": "Homeless Camp-Trash",
            },
            {
              "desc2": "Report encampments within 500 feet from a Pre-K – 12 School.",
              "description": "Homeless Encampment Blocking Sidewalk",
              "id": "a0Om0000005qSdnEAE",
              "subType": "Homeless Encampment 500ft from School",
            },
            {
              "desc2": "Reports of camps at parks or bike trails are responded to by Park Rangers. When submitting a request, please provide a detailed description of the concern and its location within the park.",
              "description": "Report a homeless camp at a park or bike trail.",
              "id": "a0Om0000004sETpEAM",
              "subType": "Homeless Camp at Park or Bike Trail",
            },
          ],
          "type": "Homeless Camp",
        },
        {
          "id": "a0Om0000003eSnoEAE",
          "subTypes": [
            {
              "desc2": "Reports of broken, vandalized, or otherwise non-working meters are reviewed by the City's Meter Shop. You may choose to stay parked at a broken meter at your own risk. Issued citations may be contested via the City Website.",
              "description": "Report a broken or malfunctioning meter or payment machine.",
              "id": "a0Om0000003eSnpEAE",
              "subType": "Broken Meter or Payment Machine",
            },
            {
              "desc2": "Parking Customer Service can assist with questions regarding monthly parking, IOU's, requests to contact Parking Staff, and lots more. Staff cannot retract a citation. When submitting a request, please include your contact information.",
              "description": "Questions regarding monthly parking, IOU's, or requests to contact Parking Staff.",
              "id": "a0Om0000003eSnqEAE",
              "subType": "Customer Service: Parking",
            },
            {
              "desc2": "Officers are on duty 7:30am-10pm Sun-Mon and 7:30am-11pm Tues-Sat, excluding Holidays. Please include the make, model, vehicle plate number as well as a description of the violation and location.",
              "description": "Report parking violations (blocking hydrant, parked in "no parking," etc.)",
              "id": "a0Om0000003eSnrEAE",
              "subType": "Enforcement Request",
            },
            {
              "desc2": "If you have a general question about on or off-street parking services, please provide us with your contact information and a description of the concern. For citation contests, please follow the instructions located on the back of your citation.",
              "description": "General questions regarding parking policies or procedures.",
              "id": "a0Om0000003eSnsEAE",
              "subType": "General: Parking",
            },
          ],
          "type": "Parking",
        },
        {
          "id": "a0Om0000003eI2lEAE",
          "subTypes": [
            {
              "desc2": "The Park Maintenance team responds to reports of a City Park fence or gate that is in need of repair. Please include a detailed description of the fence's location and the name of the park when submitting your request.",
              "description": "Report concerns with a fence or gate at a City Park.",
              "id": "a0Om0000003eI2nEAE",
              "subType": "Broken or Damaged Park Fence or Gate",
            },
            {
              "desc2": "If you have general questions about City parks, please provide us with a detailed description of your concern and your contact information. You may also want to check our Answers page for answers to our most asked questions.",
              "description": "Questions about park policies or procedures.",
              "id": "a0Om0000003eI2mEAE",
              "subType": "General: Parks",
            },
            {
              "desc2": "The Park Maintenance team responds to requests for clean up of a City Park. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name.",
              "description": "Request grounds cleaning or removal of trash at a City Park.",
              "id": "a0Om0000003eI2oEAE",
              "subType": "Grounds Cleaning",
            },
            {
              "desc2": "Faulty irrigation devices, like sprinklers, are repaired by our Park Maintenance Team. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name.",
              "description": "Report concerns with sprinkler or irrigation systems at a City Park.",
              "id": "a0Om0000003eI2pEAE",
              "subType": "Irrigation",
            },
            {
              "desc2": "Reports of overgrown weeds or grass are addressed by our Park Maintenance Team. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name.",
              "description": "Request mowing or trimming of trees or landscapes at a City Park.",
              "id": "a0Om0000003eI2rEAE",
              "subType": "Mowing or Trimming Request",
            },
            {
              "desc2": "If you have observed a concern at a park that does not fit into the available categories, please provide a detailed description of the concern, its location in the park, and the park name.",
              "description": "Report a non-listed concern to our Parks Department.",
              "id": "a0Om0000003eI2sEAE",
              "subType": "Other Park Concern",
            },
            {
              "desc2": "The maintenance and safety of our park playground equipment are important to us. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name.",
              "description": "Report concerns with playground or court equipment.",
              "id": "a0Om0000003eI2tEAE",
              "subType": "Park Playground",
            },
            {
              "desc2": "Park Rangers respond to concerns regarding safety at a City park. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name. A Ranger will respond as quickly as possible.",
              "description": "Request a Park Ranger for safety concerns.",
              "id": "a0Om0000003eI2vEAE",
              "subType": "Request a Park Ranger",
            },
            {
              "desc2": "Our Park Maintenance Team responds to concerns regarding the cleanliness or maintenance of park restrooms. Please include the details and the park name. For restroom concerns on your scheduled reservation day, please call us at 311 or 916.808.5011.",
              "description": "Request clean up or maintenance for a park restroom.",
              "id": "a0Om0000003eI2uEAE",
              "subType": "Restrooms",
            },
          ],
          "type": "Parks",
        },
        {
          "id": "a0Om0000003e80xEAA",
          "subTypes": [
            {
              "desc2": "If you are requesting information about City Sewer services, please provide us with an address. Situations that require an immediate response, like overflowing or backed-up sewage, should be called in so that a crew can respond as quickly as possible.",
              "description": "General sewer questions.",
              "id": "a0Om0000003e816EAA",
              "subType": "General: Sewer",
            },
          ],
          "type": "Sewer",
        },
        {
          "id": "a0Om0000003eI2iEAE",
          "subTypes": [
            {
              "desc2": "Shared bikes or scooters should be returned to a bike rack or drop zone after use. If you observe a BLACK bike or scooter that is illegally parked, please submit a request and include a detailed description of its location.",
              "description": "Report an illegally parked BLACK BIRD bike or scooter.",
              "id": "a0Om0000004C63xEAC",
              "subType": "Bird",
            },
            {
              "desc2": "Shared bikes or scooters should be returned to a bike rack or drop zone after use. If you observe a BLUE and BLACK scooter that is illegally parked, please submit a request and include a detailed description of its location.",
              "description": "Report an illegally parked BLUE and BLACK HELBIZ scooter.",
              "id": "a0Om0000005xzDSEAY",
              "subType": "Helbiz",
            },
            {
              "desc2": "Shared bikes or scooters should be returned to a bike rack or drop zone after use. If you observe a GREEN bike or scooter that is illegally parked, please submit a request and include a detailed description of its location.",
              "description": "Report an illegally parked GREEN LIME bike or scooter .",
              "id": "a0Om0000003eI2kEAE",
              "subType": "Lime",
            },
            {
              "desc2": "Shared bikes or scooters should be returned to a bike rack or drop zone after use. If you observe a RED and BLACK scooter that is illegally parked, please submit a request and include a detailed description of its location.",
              "description": "Report an illegally parked RED and BLACK RAZOR bike or scooter.",
              "id": "a0Om0000005dycyEAA",
              "subType": "Razor",
            },
            {
              "desc2": "Shared scooters should be returned to a bike rack or drop zone after use. If you observe a Yellow and Gray scooter that is illegally parked, please submit a request and include a detailed description of its location.",
              "description": "Report an illegally parked Superpedestrian scooter.",
              "id": "a0ODh000005jqrBMAQ",
              "subType": "Superpedestrian",
            },
          ],
          "type": "Shared Rideables",
        },
        {
          "id": "a0Om0000003dz9tEAA",
          "subTypes": [
            {
              "desc2": "If you are requesting information about City trash services, please provide us with the address you're inquiring about so that we can better serve you. For assistance with your bill, or to make a payment, please call 916-808-5454 and select option 2.",
              "description": "Questions or concerns regarding Solid Waste policies or procedures. For assistance with a container issue, such as repair, replacement or missing cans please call 311.",
              "id": "a0Om0000003dzA6EAI",
              "subType": "General: Solid Waste",
            },
            {
              "desc2": "Our Solid Waste Team removes illegal dumping in the public right of way. They can also investigate and prosecute individuals who illegally dump. To report trash on private property, please submit a Code Enforcement case.",
              "description": "Report illegal dumping on a public street. For dumping and trash related to encampments, use Homeless Camp – Trash. For Junk and Debris on private property use Code Enforcement – Junk & Debris.",
              "id": "a0Om0000004knaiEAA",
              "subType": "Illegal Dumping",
            },
            {
              "desc2": "If we missed servicing your container, please let us know so that we schedule return service. To ensure we're able to go back out, please report missed service within two days of your collection day.",
              "description": "Report a missed or partially serviced container.",
              "id": "a0Om0000003dzABEAY",
              "subType": "Missed Weekly Collection",
            },
            {
              "desc2": "",
              "description": "General noise complaint.",
              "id": "a0Om00000062fTKEAY",
              "subType": "Noise Complaint - RSW",
            },
            {
              "desc2": "A printed recycle guide that includes a dump coupon is mailed out mid-year. Guides are mailed to the service address, not the billing address. If you didn't receive a guide or misplaced it, we are able to send out a replacement.",
              "description": "Request a replacement dump coupon or recycle guide.",
              "id": "a0Om0000003dzA7EAI",
              "subType": "Recycle Guide or Dump Coupon Request",
            },
            {
              "desc2": "Household junk appointments are only available February through October. Appliance/e-waste appointments are available year-round. Contact information is required to schedule any appointment based pick-up.",
              "description": "Request an appliance/ewaste, or motor oil appointment. Contact information is required to schedule any appointment based pick-up. Free household junk appointments have all been filled for this year. Scheduling will resume in February 2024.",
              "id": "a0Om0000003dzA8EAI",
              "subType": "Schedule an Appointment Based Pick-Up",
            },
          ],
          "type": "Solid Waste",
        },
        {
          "id": "a0Om0000003eI2TEAU",
          "subTypes": [
            {
              "desc2": "The City will install bicycle racks or shared-rideable drop zones on public property where there is a demonstrated need. Please include your property address when submitting this request.",
              "description": "Report concerns with existing bike racks or request a new bike rack installation.",
              "id": "a0Om0000003eI2VEAU",
              "subType": "Bike Rack Issues",
            },
            {
              "desc2": "The City of Sacramento continues to make our City friendlier for bicycling. If you observe concerns with a bikeway, please report it. When submitting this request, please provide a detailed summary of the concern and its location.",
              "description": "Report concerns with a bikeway, such as unsafe conditions like trash, or glass.",
              "id": "a0Om0000003eI2WEAU",
              "subType": "Bikeway Issues",
            },
            {
              "desc2": "The City maintains all curbs. If you observe a concern, please submit a request that includes a detailed description and the location.",
              "description": "Report concerns regarding a curb or gutter such as unsafe conditions, or grading issues.",
              "id": "a0Om0000003eI2XEAU",
              "subType": "Curb or Gutter",
            },
            {
              "desc2": "If you're requesting information about general street services, please provide the address you're inquiring about so that we can better serve you.",
              "description": "General questions regarding policies and procedures about City Streets.",
              "id": "a0Om0000003eI2UEAU",
              "subType": "General: Streets",
            },
            {
              "desc2": "Our Street Maintenance team responds to reports of potholes in real-time. When submitting a request, please provide a detailed description of the concern and its location.",
              "description": "Report a pothole on a City street.",
              "id": "a0Om0000003eI2aEAE",
              "subType": "Pothole",
            },
            {
              "desc2": "Malfunctioning street lights can be repaired by our City team. When submitting a request, please provide a detailed description.",
              "description": "Report a malfunctioning lighting fixture, including street lamps.",
              "id": "a0Om0000003eI2eEAE",
              "subType": "Street Lighting",
            },
            {
              "desc2": "Property owners are responsible for maintaining the sidewalk in front of their properties. The City will inspect reports of damaged sidewalks. If you observe a concern, please submit a request that includes a detailed description and the location.",
              "description": "Report a broken, damaged, or unsafe sidewalk.",
              "id": "a0Om0000003eI2bEAE",
              "subType": "Sidewalk",
            },
            {
              "desc2": "The City maintains street signage. If you observe a concern, please submit a request that includes a detailed description and the location.",
              "description": "Report missing or damaged signs or repainting of street markings.",
              "id": "a0Om0000003eI2cEAE",
              "subType": "Signs and Markings",
            },
            {
              "desc2": "Reports of items in the roadway should be reported immediately. When submitting a request, please include a detailed description of the concern and its location.",
              "description": "Report items blocking a lane of traffic.",
              "id": "a0Om0000003dzAFEAY",
              "subType": "Street Maintenance",
            },
            {
              "desc2": "Concerns with the landscaped section between the sidewalk & street, like overflowing sprinklers, are addressed in real-time by our City crew. When submitting a case, please provide a detailed description of the concern and its location.",
              "description": "Report concerns with the landscaped section between the sidewalk & street, like overflowing sprinklers.",
              "id": "a0Om0000003eI2fEAE",
              "subType": "Streetscapes",
            },
            {
              "desc2": "Requests for new speed bumps, signage, or street markings are reviewed by our Transportation team. Please include a detailed description of the concern and location. This request requires your contact information. Anonymous requests will not be reviewed.",
              "description": "Request new speed bumps, signage, or street markings.",
              "id": "a0Om0000003eI2hEAE",
              "subType": "Traffic Investigation",
            },
            {
              "desc2": "Concerns with traffic signals should be reported immediately. When submitting a concern, please include a detailed description of the complaint, the location, and your direction of travel.",
              "description": "Report a malfunctioning traffic signal.",
              "id": "a0Om0000003eI2gEAE",
              "subType": "Traffic Signals",
            },
          ],
          "type": "Streets",
        },
        {
          "id": "a0Om0000003eAxdEAE",
          "subTypes": [
            {
              "desc2": "For general questions about the services our Urban Forestry team provides, please submit a request and provide us with a detailed description of your concern. You may also want to check our Answers page for answers to our most asked questions.",
              "description": "Questions regarding urban forestry policies or procedures.",
              "id": "a0Om0000003eAxeEAE",
              "subType": "General: Urban Forestry",
            },
            {
              "desc2": "The City of Sacramento's Urban Forestry division provides maintenance to city street trees, trees in the public right-of-way, and trees on City property. They also inspect trees on private property to determine if a tree qualifies for removal.",
              "description": "Request inspection or maintenance of a protected or City tree.",
              "id": "a0Om0000003eAxfEAE",
              "subType": "Tree Service Request",
            },
          ],
          "type": "Urban Forestry",
        },
        {
          "id": "a0Om0000003eSnhEAE",
          "subTypes": [
            {
              "desc2": "If you're requesting information about City utility services, please provide the address you're inquiring about so that we can better serve you. For assistance with your bill, or to make a payment, please call 916-808-5454 and select option 2.",
              "description": "General utility billing questions.",
              "id": "a0Om0000003eSniEAE",
              "subType": "General: Utility Billing",
            },
          ],
          "type": "Utility Billing",
        },
        {
          "id": "a0Om0000003e81DEAQ",
          "subTypes": [
            {
              "desc2": "If you're requesting information about City water services, please provide the address you're inquiring about so that we can better serve you. Situations that are urgent in nature, like a leak or broken pipe, should be called into 311 or 916.808.5011.",
              "description": "General water service questions.",
              "id": "a0Om0000003e81JEAQ",
              "subType": "General: Water",
            },
            {
              "desc2": "Request information about virtual Water Wise House Calls, business and residential water conservation rebates or leak investigation if a leak letter was received.",
              "description": "Request information about virtual Water Wise House Calls, business and residential water conservation rebates or leak investigation if a leak letter was received.",
              "id": "a0Om0000003e81SEAQ",
              "subType": "Water Conservation",
            },
            {
              "desc2": "When reporting information to the City, please be sure to include; days and times the watering is occurring, the address of where the water misuse is taking place, and any pattern to the watering, like the frequency.",
              "description": "Report a water use concern.",
              "id": "a0Om0000003e81REAQ",
              "subType": "Water Use Complaint",
            },
          ],
          "type": "Water",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "marginBottom": 15,
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "borderBottomColor": "#fdaa1f",
                "borderBottomWidth": 1,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#203d61",
                    "fontFamily": "jbm",
                    "fontSize": 25,
                    "marginLeft": "2%",
                  },
                  {
                    "color": "#203d61",
                  },
                ]
              }
            >
              Animal Care
            </Text>
          </View>
          <View
            data={
              [
                {
                  "desc2": "Front Street staff are available to help answer questions about adoptions, spay and neuter resources, lost and found pets, licensing, and nuisance barking. As barking complaints may not be made anonymously, please provide us with your name and address.",
                  "description": "Questions about adoptions, spay/neuter resources, found animals, licensing and barking.",
                  "id": "a0Om0000003dz9wEAA",
                  "subType": "Contact Front Street Shelter",
                },
                {
                  "desc2": "An Animal Control Officer will respond to requests to remove a dead animal from the public right-of-way, like a sidewalk or street. Deceased animals weighing 10 pounds or less may be placed in a plastic bag and disposed of in a trash receptacle.",
                  "description": "Report a dead animal in the public right of way.",
                  "id": "a0Om0000003dzA0EAI",
                  "subType": "Dead Animal",
                },
                {
                  "desc2": "If you’re inquiring about the status or identification of an animal, please visit us in person. For all other questions, please describe your concern in detail and provide your contact information so that we may assist you.",
                  "description": "General Animal Control Questions",
                  "id": "a0Om0000003dzA5EAI",
                  "subType": "General: Animal Control",
                },
                {
                  "desc2": "Suspected animal neglect should be reported to Animal Control so that an Officer can check on the animal's condition. When submitting this request, please provide the address where the animal lives and a detailed description of the animal and concern.",
                  "description": "Report concerns with an owned animal.",
                  "id": "a0Om0000003dzA1EAI",
                  "subType": "Pet Complaint or Concerns",
                },
                {
                  "desc2": "If you see a loose dog in a busy area, it’s best not to try to catch them, as they may run into traffic. If you’ve already captured the dog, you can bring the dog to the shelter between 12pm-5pm 7 days a week. Appointments are highly encouraged.",
                  "description": "Report an injured, sick, or aggressive stray animal.",
                  "id": "a0Om0000003dzA3EAI",
                  "subType": "Stray or Loose Animal",
                },
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={[]}
            viewabilityConfigCallbackPairs={[]}
          >
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Contact Front Street Shelter
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Questions about adoptions, spay/neuter resources, found animals, licensing and barking.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Dead Animal
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report a dead animal in the public right of way.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    General: Animal Control
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  General Animal Control Questions
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Pet Complaint or Concerns
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report concerns with an owned animal.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Stray or Loose Animal
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report an injured, sick, or aggressive stray animal.
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "marginBottom": 15,
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "borderBottomColor": "#fdaa1f",
                "borderBottomWidth": 1,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#203d61",
                    "fontFamily": "jbm",
                    "fontSize": 25,
                    "marginLeft": "2%",
                  },
                  {
                    "color": "#203d61",
                  },
                ]
              }
            >
              Building and Planning
            </Text>
          </View>
          <View
            data={
              [
                {
                  "desc2": "Limited in-person appointments for building and planning are available Tuesdays and Wednesdays from 9:00 a.m. to 3:30 p.m. Assistance is also available by email. Please include the address and a detailed summary so that we can better assist you.",
                  "description": "Questions or concerns regarding building, planning, or zoning.",
                  "id": "a0Om0000003eSnlEAE",
                  "subType": "General: Building and Planning",
                },
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={[]}
            viewabilityConfigCallbackPairs={[]}
          >
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    General: Building and Planning
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Questions or concerns regarding building, planning, or zoning.
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "marginBottom": 15,
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "borderBottomColor": "#fdaa1f",
                "borderBottomWidth": 1,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#203d61",
                    "fontFamily": "jbm",
                    "fontSize": 25,
                    "marginLeft": "2%",
                  },
                  {
                    "color": "#203d61",
                  },
                ]
              }
            >
              Business Resources
            </Text>
          </View>
          <View
            data={
              [
                {
                  "desc2": "",
                  "description": "Connecting businesses to lending partners and grant opportunities.",
                  "id": "a0Om0000005eha5EAA",
                  "subType": "Access to Capital",
                },
                {
                  "desc2": "",
                  "description": "Business technical assistance including, but not limited to: accounting, human resources, marketing, operations, site selection, strategic planning, succession planning, e-commerce, legal structure, etc.",
                  "id": "a0Om0000005ehaBEAQ",
                  "subType": "Business Assistance/Professional Services",
                },
                {
                  "desc2": "",
                  "description": "Assistance obtaining economic data including geographic and commercial real estate information through a variety of data sources such as ESRI and CoStar.",
                  "id": "a0ODh000005jJR2MAM",
                  "subType": "Economic Data",
                },
                {
                  "desc2": "",
                  "description": "Financial and technical assistance for brownfields assessment and remediation.",
                  "id": "a0ODh000005jJQxMAM",
                  "subType": "Environmental Brownfields Assistance",
                },
                {
                  "desc2": "",
                  "description": "Free one-on-one financial navigation and coaching.",
                  "id": "a0Om0000005ehaCEAQ",
                  "subType": "Financial Empowerment",
                },
                {
                  "desc2": "",
                  "description": "For general business assistance and resource service requests.",
                  "id": "a0Om0000005authEAA",
                  "subType": "General: Business Resources",
                },
                {
                  "desc2": "",
                  "description": "Assistance with permits (entertainment, business operations tax certificates, planning and building assistance, etc.), new or existing rules and regulations, etc.",
                  "id": "a0ODh000005jJQsMAM",
                  "subType": "Navigating City of Sacramento Permits and Regulatory Environment",
                },
                {
                  "desc2": "",
                  "description": "Resources for employers, and job and workforce readiness.",
                  "id": "a0Om0000005YFcWEAW",
                  "subType": "Workforce Development & Training",
                },
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={[]}
            viewabilityConfigCallbackPairs={[]}
          >
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Access to Capital
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Connecting businesses to lending partners and grant opportunities.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Business Assistance/Professional Services
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Business technical assistance including, but not limited to: accounting, human resources, marketing, operations, site selection, strategic planning, succession planning, e-commerce, legal structure, etc.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Economic Data
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Assistance obtaining economic data including geographic and commercial real estate information through a variety of data sources such as ESRI and CoStar.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Environmental Brownfields Assistance
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Financial and technical assistance for brownfields assessment and remediation.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Financial Empowerment
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Free one-on-one financial navigation and coaching.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    General: Business Resources
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  For general business assistance and resource service requests.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Navigating City of Sacramento Permits and Regulatory Environment
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Assistance with permits (entertainment, business operations tax certificates, planning and building assistance, etc.), new or existing rules and regulations, etc.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Workforce Development & Training
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Resources for employers, and job and workforce readiness.
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "marginBottom": 15,
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "borderBottomColor": "#fdaa1f",
                "borderBottomWidth": 1,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#203d61",
                    "fontFamily": "jbm",
                    "fontSize": 25,
                    "marginLeft": "2%",
                  },
                  {
                    "color": "#203d61",
                  },
                ]
              }
            >
              Code Enforcement
            </Text>
          </View>
          <View
            data={
              [
                {
                  "desc2": "A private residence may not be used to conduct business as an auto repair shop. If you are reporting a suspected auto repair business, please provide the address, a detailed description of the work taking place, and the hours the activities are happening.",
                  "description": "Report a home-based auto repair business or major auto repair taking place on the street.",
                  "id": "a0Om0000003eSnMEAU",
                  "subType": "Auto Repair",
                },
                {
                  "desc2": "A basketball hoop is allowed on private property as long as it does not impede on the public right of way. Hoops may not be kept on a sidewalk, or in the street. When reporting a basketball hoop, please include the address where the hoop is located.",
                  "description": "Report a basketball hoop on the street or sidewalk.",
                  "id": "a0Om0000003eSnNEAU",
                  "subType": "Basketball Hoop in Public Right of Way",
                },
                {
                  "desc2": "The Business Compliance Unit works to address concerns about entertainment venues like bars or clubs. When reporting a concern, please include the address and a detailed description of the situation.",
                  "description": "Report concerns with taxi's, entertainment venues like pubs or clubs.",
                  "id": "a0Om0000003eSnJEAU",
                  "subType": "Business Compliance Entertainment",
                },
                {
                  "desc2": "The Business Compliance Unit works to address concerns regarding stray shopping carts. When reporting a concern, please include the address and a detailed description of the situation.",
                  "description": "Report a stray shopping cart.",
                  "id": "a0Om0000005DXeXEAW",
                  "subType": "Business Compliance Shopping Cart",
                },
                {
                  "desc2": "The Business Compliance Unit works to address concerns regarding short term rentals. When reporting a concern, please include the address and a detailed description of the situation.",
                  "description": "Report a concern with a short term rental.",
                  "id": "a0Om00000062dGjEAI",
                  "subType": "Business Compliance Short Term Rental",
                },
                {
                  "desc2": "The Business Compliance Unit works to address concerns regarding taxi cabs. When reporting a concern, please include a detailed description of the incident including the cab/taxi number and the location of travel.",
                  "description": "Report a concern with a taxi cab.",
                  "id": "a0Om0000005DXecEAG",
                  "subType": "Business Compliance Taxi Cab",
                },
                {
                  "desc2": "The Business Compliance Unit addresses concerns regarding vacant lots with no structures that have overgrown weeds or grass. When reporting a concern, please include the address closest to the lot and a detailed description of the concern.",
                  "description": "Report a lot with overgrown weeds or grass.",
                  "id": "a0Om0000005DXehEAG",
                  "subType": "Business Compliance Weeds",
                },
                {
                  "desc2": "Please provide us with a detailed description of your question or concern so that we can properly answer or redirect your request. Please note 311 is unable to provide legal advice or specific details regarding an open case.",
                  "description": "Questions regarding code or housing enforcement policies.",
                  "id": "a0Om0000003eSngEAE",
                  "subType": "General: Code Enforcement",
                },
                {
                  "desc2": "City crews abate graffiti & offer removal supplies & color matching assistance to the public. When reporting graffiti, please provide a detailed description of the type of graffiti and its location. If possible, please include a picture in your request.",
                  "description": "Report graffiti on public and/or private property.",
                  "id": "a0Om0000003eSnWEAU",
                  "subType": "Graffiti",
                },
                {
                  "desc2": "Housing officers respond to a variety of concerns regarding the safety of a property, residential or commercial. When submitting this case, please provide a detailed description of the issue and the property's address.",
                  "description": "Report structural or electrical concerns with a property.",
                  "id": "a0Om0000003eSnaEAE",
                  "subType": "Housing Complaint",
                },
                {
                  "desc2": "Code Enforcement addresses reports of junk/debris in the front, side, or rear of a property. Items on the sidewalk or street should be reported as illegal dumping. Please include an exact address and detailed description of the items in your request.",
                  "description": "Report junk, debris, or trash on private property, in a front, rear or side yard or on a vacant lot. To report Illegal Dumping on a public street, please go to Solid Waste – Illegal Dumping. For dumping and trash related to encampments, use Homeless Camp – Trash.",
                  "id": "a0Om0000003eSnOEAU",
                  "subType": "Junk & Debris",
                },
                {
                  "desc2": "The City will address concerns regarding overgrown grass or weeds on private property or greenery that is impeding on the public right of way. The City is unable to direct Citizens to prune or maintain trees on private property.",
                  "description": "Report concerns with overgrown landscaping encroaching on the public right of way.",
                  "id": "a0Om0000003eSnPEAU",
                  "subType": "Landscaping",
                },
                {
                  "desc2": "Code Enforcement will address reports of leaf blowers or loud mechanical noise like air conditioners. For concerns regarding loud music, or people, please contact Sac PD non-emergency at 916.808.5471.",
                  "description": "Report mechanical noise like an air conditioner or leaf blower.",
                  "id": "a0Om0000003eSnREAU",
                  "subType": "Mechanical Noise Complaint",
                },
                {
                  "desc2": "A 25' setback is required to store an RV on private property. RV's may not be parked or lived in on a driveway, side or rear yard, nor can they have electrical hookups. When submitting this request, please provide the address where the vehicle resides.",
                  "description": "Report an occupied trailer or RV parked on private property.",
                  "id": "a0Om0000003eSnQEAU",
                  "subType": "Occupied Trailer On Private Property",
                },
                {
                  "desc2": "Property owners are responsible for maintaining a proper pest control program. If you are a tenant whose landlord is refusing to address mice, roaches, or rats, please provide a detailed description of the problem and include your contact information.",
                  "description": "Report roaches, mice, or rats in a rented property.",
                  "id": "a0Om0000003eSnVEAU",
                  "subType": "Pest",
                },
                {
                  "desc2": "",
                  "description": "Report a downed or damaged fence or an unfenced pool.",
                  "id": "a0Om0000003eSnUEAU",
                  "subType": "Fences",
                },
                {
                  "desc2": "Signs or banners are generally not allowed in the public right-of-way. When reporting a sign or banner imposing on the public right of way, like a sidewalk or utility post, please describe the signs, its location, and include a picture when possible.",
                  "description": "Report illegal signage in the public right of way.",
                  "id": "a0Om0000003eSnSEAU",
                  "subType": "Signs, Banners, or Fliers",
                },
                {
                  "desc2": "",
                  "description": "Report an unkempt pool, or other stagnant water causing mosquitos.",
                  "id": "a0Om0000004sEToEAM",
                  "subType": "Stagnant Water",
                },
                {
                  "desc2": "Inoperable vehicles may not be stored in a driveway or a side yard that is visible from the street. Cars, trucks, RVs, or boats parked in driveways, or paved side yards are permitted, as long as they are whole and complete and capable of being driven.",
                  "description": "Report a non-operational vehicle on private property, like a driveway.",
                  "id": "a0Om0000003eSnKEAU",
                  "subType": "Vehicle on Private Property",
                },
                {
                  "desc2": "Unoccupied vehicles cannot be parked on a public street for more than 72 hours without moving. Occupied vehicles are currently exempt from this rule due to the stay at home order. Please include the vehicle's exact location in your request.",
                  "description": "Report a vehicle parked on a City street in excess of 72 hours.",
                  "id": "a0Om0000003eSnXEAU",
                  "subType": "Vehicle Abandoned on Street",
                },
                {
                  "desc2": "A permit is required for new construction, additions, remodeling, roofing, or repairs to electrical, mechanical, and plumbing systems. When reporting suspected work without a permit, please provide an exact address and a description of the work.",
                  "description": "Report construction work believed to be taking place without a permit.",
                  "id": "a0Om0000003eSnZEAU",
                  "subType": "Work Without a Permit",
                },
                {
                  "desc2": "Private properties are allowed one-yard sale per calendar year, not to exceed two consecutive days a year. When reporting excessive yard sales, please provide the property's exact address.",
                  "description": "Report a property holding excessive yard or garage sales.",
                  "id": "a0Om0000003eSnTEAU",
                  "subType": "Yard or Garage Sale Complaint",
                },
                {
                  "desc2": "Detached accessory structures, like a shed or garage, are not allowed in a front or street-side yard without a permit. Structures no larger than 10x12 are allowed without a permit in a backyard. Please provide an address when submitting this case.",
                  "description": "Report a detached structure like a carport or shed in the front or rear yard.",
                  "id": "a0Om0000003eSneEAE",
                  "subType": "Zoning: Detatched Accessory Structure",
                },
                {
                  "desc2": "Fences visible from the public right of way are required to be properly maintained so as not to create a hazard, public nuisance, or blight. Concerns with backyard fences are civil issues and will not be addressed by Code Enforcement.",
                  "description": "Report a downed or damaged fence or an unfenced pool.",
                  "id": "a0Om0000003eSndEAE",
                  "subType": "Zoning: Fencing",
                },
                {
                  "desc2": "A private residence may not be used to conduct business. When submitting a report for a suspected home-based business, please provide a detailed description of the suspected business and the home's exact address.",
                  "description": "Report an unlicensed home-based business.",
                  "id": "a0Om0000003eSnfEAE",
                  "subType": "Zoning: Home Occupation",
                },
                {
                  "desc2": "Zoning will address recycling centers, tire shops, or parking lots being operated out of inappropriately zoned lots. Zoning will also address private properties that have been over-paved. Please provide a detailed description and address for this case.",
                  "description": "Report an unauthorized recycling center or overly paved front yard.",
                  "id": "a0Om0000003eSncEAE",
                  "subType": "Zoning: Improper Land Use or Overpavement",
                },
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={[]}
            viewabilityConfigCallbackPairs={[]}
          >
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Auto Repair
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report a home-based auto repair business or major auto repair taking place on the street.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Basketball Hoop in Public Right of Way
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report a basketball hoop on the street or sidewalk.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Business Compliance Entertainment
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report concerns with taxi's, entertainment venues like pubs or clubs.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Business Compliance Shopping Cart
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report a stray shopping cart.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Business Compliance Short Term Rental
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report a concern with a short term rental.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Business Compliance Taxi Cab
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report a concern with a taxi cab.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Business Compliance Weeds
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report a lot with overgrown weeds or grass.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    General: Code Enforcement
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Questions regarding code or housing enforcement policies.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Graffiti
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report graffiti on public and/or private property.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Housing Complaint
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report structural or electrical concerns with a property.
                </Text>
              </View>
            </View>
            <View
              style={
                {
                  "height": 0,
                }
              }
            />
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "marginBottom": 15,
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "borderBottomColor": "#fdaa1f",
                "borderBottomWidth": 1,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#203d61",
                    "fontFamily": "jbm",
                    "fontSize": 25,
                    "marginLeft": "2%",
                  },
                  {
                    "color": "#203d61",
                  },
                ]
              }
            >
              Drains
            </Text>
          </View>
          <View
            data={
              [
                {
                  "desc2": "If you're requesting information about City drain services, please provide the address you're inquiring about so that we can better serve you. Situations that are urgent in nature, like a plugged drain, should be called into 311 or 916.808.5011.",
                  "description": "Non-urgent general drains questions. Please call for situations that require immediate attention.",
                  "id": "a0Om0000003e1enEAA",
                  "subType": "General: Drains",
                },
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={[]}
            viewabilityConfigCallbackPairs={[]}
          >
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    General: Drains
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Non-urgent general drains questions. Please call for situations that require immediate attention.
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "marginBottom": 15,
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "borderBottomColor": "#fdaa1f",
                "borderBottomWidth": 1,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#203d61",
                    "fontFamily": "jbm",
                    "fontSize": 25,
                    "marginLeft": "2%",
                  },
                  {
                    "color": "#203d61",
                  },
                ]
              }
            >
              Homeless Camp
            </Text>
          </View>
          <View
            data={
              [
                {
                  "desc2": "Reports of camps are reviewed by the Department of Community Response. Due to the high volume of reports received, a response may not be possible in all cases. Concerns for personal safety or suspected illegal activity should be reported to Sac PD.",
                  "description": "Report a camp or homeless concern on public property, excluding a park or bike trail.",
                  "id": "a0Om0000003eSnnEAE",
                  "subType": "Homeless Concern",
                },
                {
                  "desc2": "Please use this request type to submit a report of trash left behind from an encampment or to request trash clean-up around an encampment.",
                  "description": "To report trash from a homeless camp.",
                  "id": "a0Om0000005oGQLEA2",
                  "subType": "Homeless Camp-Trash",
                },
                {
                  "desc2": "Report encampments within 500 feet from a Pre-K – 12 School.",
                  "description": "Homeless Encampment Blocking Sidewalk",
                  "id": "a0Om0000005qSdnEAE",
                  "subType": "Homeless Encampment 500ft from School",
                },
                {
                  "desc2": "Reports of camps at parks or bike trails are responded to by Park Rangers. When submitting a request, please provide a detailed description of the concern and its location within the park.",
                  "description": "Report a homeless camp at a park or bike trail.",
                  "id": "a0Om0000004sETpEAM",
                  "subType": "Homeless Camp at Park or Bike Trail",
                },
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={[]}
            viewabilityConfigCallbackPairs={[]}
          >
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Homeless Concern
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report a camp or homeless concern on public property, excluding a park or bike trail.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Homeless Camp-Trash
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  To report trash from a homeless camp.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Homeless Encampment 500ft from School
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Homeless Encampment Blocking Sidewalk
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Homeless Camp at Park or Bike Trail
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report a homeless camp at a park or bike trail.
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "marginBottom": 15,
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "borderBottomColor": "#fdaa1f",
                "borderBottomWidth": 1,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#203d61",
                    "fontFamily": "jbm",
                    "fontSize": 25,
                    "marginLeft": "2%",
                  },
                  {
                    "color": "#203d61",
                  },
                ]
              }
            >
              Parking
            </Text>
          </View>
          <View
            data={
              [
                {
                  "desc2": "Reports of broken, vandalized, or otherwise non-working meters are reviewed by the City's Meter Shop. You may choose to stay parked at a broken meter at your own risk. Issued citations may be contested via the City Website.",
                  "description": "Report a broken or malfunctioning meter or payment machine.",
                  "id": "a0Om0000003eSnpEAE",
                  "subType": "Broken Meter or Payment Machine",
                },
                {
                  "desc2": "Parking Customer Service can assist with questions regarding monthly parking, IOU's, requests to contact Parking Staff, and lots more. Staff cannot retract a citation. When submitting a request, please include your contact information.",
                  "description": "Questions regarding monthly parking, IOU's, or requests to contact Parking Staff.",
                  "id": "a0Om0000003eSnqEAE",
                  "subType": "Customer Service: Parking",
                },
                {
                  "desc2": "Officers are on duty 7:30am-10pm Sun-Mon and 7:30am-11pm Tues-Sat, excluding Holidays. Please include the make, model, vehicle plate number as well as a description of the violation and location.",
                  "description": "Report parking violations (blocking hydrant, parked in "no parking," etc.)",
                  "id": "a0Om0000003eSnrEAE",
                  "subType": "Enforcement Request",
                },
                {
                  "desc2": "If you have a general question about on or off-street parking services, please provide us with your contact information and a description of the concern. For citation contests, please follow the instructions located on the back of your citation.",
                  "description": "General questions regarding parking policies or procedures.",
                  "id": "a0Om0000003eSnsEAE",
                  "subType": "General: Parking",
                },
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={[]}
            viewabilityConfigCallbackPairs={[]}
          >
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Broken Meter or Payment Machine
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report a broken or malfunctioning meter or payment machine.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Customer Service: Parking
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Questions regarding monthly parking, IOU's, or requests to contact Parking Staff.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Enforcement Request
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report parking violations (blocking hydrant, parked in "no parking," etc.)
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    General: Parking
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  General questions regarding parking policies or procedures.
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "marginBottom": 15,
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "borderBottomColor": "#fdaa1f",
                "borderBottomWidth": 1,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#203d61",
                    "fontFamily": "jbm",
                    "fontSize": 25,
                    "marginLeft": "2%",
                  },
                  {
                    "color": "#203d61",
                  },
                ]
              }
            >
              Parks
            </Text>
          </View>
          <View
            data={
              [
                {
                  "desc2": "The Park Maintenance team responds to reports of a City Park fence or gate that is in need of repair. Please include a detailed description of the fence's location and the name of the park when submitting your request.",
                  "description": "Report concerns with a fence or gate at a City Park.",
                  "id": "a0Om0000003eI2nEAE",
                  "subType": "Broken or Damaged Park Fence or Gate",
                },
                {
                  "desc2": "If you have general questions about City parks, please provide us with a detailed description of your concern and your contact information. You may also want to check our Answers page for answers to our most asked questions.",
                  "description": "Questions about park policies or procedures.",
                  "id": "a0Om0000003eI2mEAE",
                  "subType": "General: Parks",
                },
                {
                  "desc2": "The Park Maintenance team responds to requests for clean up of a City Park. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name.",
                  "description": "Request grounds cleaning or removal of trash at a City Park.",
                  "id": "a0Om0000003eI2oEAE",
                  "subType": "Grounds Cleaning",
                },
                {
                  "desc2": "Faulty irrigation devices, like sprinklers, are repaired by our Park Maintenance Team. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name.",
                  "description": "Report concerns with sprinkler or irrigation systems at a City Park.",
                  "id": "a0Om0000003eI2pEAE",
                  "subType": "Irrigation",
                },
                {
                  "desc2": "Reports of overgrown weeds or grass are addressed by our Park Maintenance Team. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name.",
                  "description": "Request mowing or trimming of trees or landscapes at a City Park.",
                  "id": "a0Om0000003eI2rEAE",
                  "subType": "Mowing or Trimming Request",
                },
                {
                  "desc2": "If you have observed a concern at a park that does not fit into the available categories, please provide a detailed description of the concern, its location in the park, and the park name.",
                  "description": "Report a non-listed concern to our Parks Department.",
                  "id": "a0Om0000003eI2sEAE",
                  "subType": "Other Park Concern",
                },
                {
                  "desc2": "The maintenance and safety of our park playground equipment are important to us. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name.",
                  "description": "Report concerns with playground or court equipment.",
                  "id": "a0Om0000003eI2tEAE",
                  "subType": "Park Playground",
                },
                {
                  "desc2": "Park Rangers respond to concerns regarding safety at a City park. When submitting this request, please include a detailed description of the concern, its location in the park, and the park name. A Ranger will respond as quickly as possible.",
                  "description": "Request a Park Ranger for safety concerns.",
                  "id": "a0Om0000003eI2vEAE",
                  "subType": "Request a Park Ranger",
                },
                {
                  "desc2": "Our Park Maintenance Team responds to concerns regarding the cleanliness or maintenance of park restrooms. Please include the details and the park name. For restroom concerns on your scheduled reservation day, please call us at 311 or 916.808.5011.",
                  "description": "Request clean up or maintenance for a park restroom.",
                  "id": "a0Om0000003eI2uEAE",
                  "subType": "Restrooms",
                },
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={[]}
            viewabilityConfigCallbackPairs={[]}
          >
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Broken or Damaged Park Fence or Gate
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report concerns with a fence or gate at a City Park.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    General: Parks
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Questions about park policies or procedures.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Grounds Cleaning
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Request grounds cleaning or removal of trash at a City Park.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Irrigation
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report concerns with sprinkler or irrigation systems at a City Park.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Mowing or Trimming Request
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Request mowing or trimming of trees or landscapes at a City Park.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Other Park Concern
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report a non-listed concern to our Parks Department.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Park Playground
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report concerns with playground or court equipment.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Request a Park Ranger
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Request a Park Ranger for safety concerns.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Restrooms
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Request clean up or maintenance for a park restroom.
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "marginBottom": 15,
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "borderBottomColor": "#fdaa1f",
                "borderBottomWidth": 1,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#203d61",
                    "fontFamily": "jbm",
                    "fontSize": 25,
                    "marginLeft": "2%",
                  },
                  {
                    "color": "#203d61",
                  },
                ]
              }
            >
              Sewer
            </Text>
          </View>
          <View
            data={
              [
                {
                  "desc2": "If you are requesting information about City Sewer services, please provide us with an address. Situations that require an immediate response, like overflowing or backed-up sewage, should be called in so that a crew can respond as quickly as possible.",
                  "description": "General sewer questions.",
                  "id": "a0Om0000003e816EAA",
                  "subType": "General: Sewer",
                },
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={[]}
            viewabilityConfigCallbackPairs={[]}
          >
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    General: Sewer
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  General sewer questions.
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            {
              "marginBottom": 15,
              "width": "100%",
            }
          }
        >
          <View
            style={
              {
                "borderBottomColor": "#fdaa1f",
                "borderBottomWidth": 1,
                "width": "100%",
              }
            }
          >
            <Text
              style={
                [
                  {
                    "color": "#203d61",
                    "fontFamily": "jbm",
                    "fontSize": 25,
                    "marginLeft": "2%",
                  },
                  {
                    "color": "#203d61",
                  },
                ]
              }
            >
              Shared Rideables
            </Text>
          </View>
          <View
            data={
              [
                {
                  "desc2": "Shared bikes or scooters should be returned to a bike rack or drop zone after use. If you observe a BLACK bike or scooter that is illegally parked, please submit a request and include a detailed description of its location.",
                  "description": "Report an illegally parked BLACK BIRD bike or scooter.",
                  "id": "a0Om0000004C63xEAC",
                  "subType": "Bird",
                },
                {
                  "desc2": "Shared bikes or scooters should be returned to a bike rack or drop zone after use. If you observe a BLUE and BLACK scooter that is illegally parked, please submit a request and include a detailed description of its location.",
                  "description": "Report an illegally parked BLUE and BLACK HELBIZ scooter.",
                  "id": "a0Om0000005xzDSEAY",
                  "subType": "Helbiz",
                },
                {
                  "desc2": "Shared bikes or scooters should be returned to a bike rack or drop zone after use. If you observe a GREEN bike or scooter that is illegally parked, please submit a request and include a detailed description of its location.",
                  "description": "Report an illegally parked GREEN LIME bike or scooter .",
                  "id": "a0Om0000003eI2kEAE",
                  "subType": "Lime",
                },
                {
                  "desc2": "Shared bikes or scooters should be returned to a bike rack or drop zone after use. If you observe a RED and BLACK scooter that is illegally parked, please submit a request and include a detailed description of its location.",
                  "description": "Report an illegally parked RED and BLACK RAZOR bike or scooter.",
                  "id": "a0Om0000005dycyEAA",
                  "subType": "Razor",
                },
                {
                  "desc2": "Shared scooters should be returned to a bike rack or drop zone after use. If you observe a Yellow and Gray scooter that is illegally parked, please submit a request and include a detailed description of its location.",
                  "description": "Report an illegally parked Superpedestrian scooter.",
                  "id": "a0ODh000005jqrBMAQ",
                  "subType": "Superpedestrian",
                },
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={[]}
            viewabilityConfigCallbackPairs={[]}
          >
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Bird
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report an illegally parked BLACK BIRD bike or scooter.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Helbiz
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report an illegally parked BLUE and BLACK HELBIZ scooter.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Lime
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report an illegally parked GREEN LIME bike or scooter .
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Razor
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report an illegally parked RED and BLACK RAZOR bike or scooter.
                </Text>
              </View>
            </View>
            <View
              onFocusCapture={[Function]}
              onLayout={[Function]}
              style={null}
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#ffffff",
                    "borderRadius": 15,
                    "elevation": 5,
                    "marginLeft": "2%",
                    "marginTop": 15,
                    "opacity": 1,
                    "padding": 10,
                    "shadowColor": "black",
                    "shadowOffset": {
                      "height": 4,
                      "width": -2,
                    },
                    "shadowOpacity": 0.33,
                    "shadowRadius": 10,
                    "width": "96%",
                  }
                }
              >
                <View
                  style={
                    [
                      {
                        "backgroundColor": "#203d61",
                        "borderRadius": 15,
                        "padding": 2,
                        "width": "100%",
                      },
                      {
                        "backgroundColor": "#203d61",
                      },
                    ]
                  }
                >
                  <Text
                    style={
                      [
                        {
                          "color": "#ffffff",
                          "fontFamily": "jbm",
                          "fontSize": 18,
                          "marginLeft": "2.5%",
                        },
                        {
                          "color": "#E7EAED",
                        },
                      ]
                    }
                  >
                    Superpedestrian
                  </Text>
                </View>
                <Text
                  style={
                    [
                      {
                        "color": "#6F6F6F",
                        "fontFamily": "jbm",
                        "fontSize": 15,
                        "marginLeft": "3%",
                        "marginTop": "3%",
                      },
                      {
                        "color": "#000000",
                      },
                    ]
                  }
                >
                  Report an illegally parked Superpedestrian scooter.
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
      <View
        style={
          {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;
